<?php
/**
 * OrderCreateV40Vse0OrdercreaterequestOrdercreatedetails
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ingram Micro eCommerce APIs
 *
 * Ingram Micro API collection for automating eCommerce business processes including orering and product search.
 *
 * OpenAPI spec version: 1.0
 * Contact: apiportalsupport@ingrammicro.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.14
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * OrderCreateV40Vse0OrdercreaterequestOrdercreatedetails Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OrderCreateV40Vse0OrdercreaterequestOrdercreatedetails implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'OrderCreate_v4_0_vse0_ordercreaterequest_ordercreatedetails';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'customerponumber' => 'string',
'ordertype' => 'string',
'enduserordernumber' => 'string',
'billtosuffix' => 'string',
'shiptosuffix' => 'string',
'shiptoaddress' => '\Swagger\Client\Model\OrderCreateV40Vse0OrdercreaterequestOrdercreatedetailsShiptoaddress',
'carriercode' => 'string',
'thirdpartyfrieghtaccountnumber' => 'string',
'specialbidnumber' => 'string',
'lines' => '\Swagger\Client\Model\OrderCreateV40Vse0OrdercreaterequestOrdercreatedetailsLines[]',
'extendedspecs' => '\Swagger\Client\Model\OrderCreateV40Vse0OrdercreaterequestOrdercreatedetailsExtendedspecs'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'customerponumber' => null,
'ordertype' => null,
'enduserordernumber' => null,
'billtosuffix' => null,
'shiptosuffix' => null,
'shiptoaddress' => null,
'carriercode' => null,
'thirdpartyfrieghtaccountnumber' => null,
'specialbidnumber' => null,
'lines' => null,
'extendedspecs' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'customerponumber' => 'customerponumber',
'ordertype' => 'ordertype',
'enduserordernumber' => 'enduserordernumber',
'billtosuffix' => 'billtosuffix',
'shiptosuffix' => 'shiptosuffix',
'shiptoaddress' => 'shiptoaddress',
'carriercode' => 'carriercode',
'thirdpartyfrieghtaccountnumber' => 'thirdpartyfrieghtaccountnumber',
'specialbidnumber' => 'specialbidnumber',
'lines' => 'lines',
'extendedspecs' => 'extendedspecs'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'customerponumber' => 'setCustomerponumber',
'ordertype' => 'setOrdertype',
'enduserordernumber' => 'setEnduserordernumber',
'billtosuffix' => 'setBilltosuffix',
'shiptosuffix' => 'setShiptosuffix',
'shiptoaddress' => 'setShiptoaddress',
'carriercode' => 'setCarriercode',
'thirdpartyfrieghtaccountnumber' => 'setThirdpartyfrieghtaccountnumber',
'specialbidnumber' => 'setSpecialbidnumber',
'lines' => 'setLines',
'extendedspecs' => 'setExtendedspecs'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'customerponumber' => 'getCustomerponumber',
'ordertype' => 'getOrdertype',
'enduserordernumber' => 'getEnduserordernumber',
'billtosuffix' => 'getBilltosuffix',
'shiptosuffix' => 'getShiptosuffix',
'shiptoaddress' => 'getShiptoaddress',
'carriercode' => 'getCarriercode',
'thirdpartyfrieghtaccountnumber' => 'getThirdpartyfrieghtaccountnumber',
'specialbidnumber' => 'getSpecialbidnumber',
'lines' => 'getLines',
'extendedspecs' => 'getExtendedspecs'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const ORDERTYPE_STANDARD = 'Standard';
const ORDERTYPE_DIRECT_SHIP = 'Direct Ship';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getOrdertypeAllowableValues()
    {
        return [
            self::ORDERTYPE_STANDARD,
self::ORDERTYPE_DIRECT_SHIP,        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['customerponumber'] = isset($data['customerponumber']) ? $data['customerponumber'] : null;
        $this->container['ordertype'] = isset($data['ordertype']) ? $data['ordertype'] : null;
        $this->container['enduserordernumber'] = isset($data['enduserordernumber']) ? $data['enduserordernumber'] : null;
        $this->container['billtosuffix'] = isset($data['billtosuffix']) ? $data['billtosuffix'] : null;
        $this->container['shiptosuffix'] = isset($data['shiptosuffix']) ? $data['shiptosuffix'] : null;
        $this->container['shiptoaddress'] = isset($data['shiptoaddress']) ? $data['shiptoaddress'] : null;
        $this->container['carriercode'] = isset($data['carriercode']) ? $data['carriercode'] : null;
        $this->container['thirdpartyfrieghtaccountnumber'] = isset($data['thirdpartyfrieghtaccountnumber']) ? $data['thirdpartyfrieghtaccountnumber'] : null;
        $this->container['specialbidnumber'] = isset($data['specialbidnumber']) ? $data['specialbidnumber'] : null;
        $this->container['lines'] = isset($data['lines']) ? $data['lines'] : null;
        $this->container['extendedspecs'] = isset($data['extendedspecs']) ? $data['extendedspecs'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['customerponumber'] === null) {
            $invalidProperties[] = "'customerponumber' can't be null";
        }
        if ($this->container['ordertype'] === null) {
            $invalidProperties[] = "'ordertype' can't be null";
        }
        $allowedValues = $this->getOrdertypeAllowableValues();
        if (!is_null($this->container['ordertype']) && !in_array($this->container['ordertype'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'ordertype', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        if ($this->container['shiptoaddress'] === null) {
            $invalidProperties[] = "'shiptoaddress' can't be null";
        }
        if ($this->container['lines'] === null) {
            $invalidProperties[] = "'lines' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets customerponumber
     *
     * @return string
     */
    public function getCustomerponumber()
    {
        return $this->container['customerponumber'];
    }

    /**
     * Sets customerponumber
     *
     * @param string $customerponumber The customers unique Purchase Order number
     *
     * @return $this
     */
    public function setCustomerponumber($customerponumber)
    {
        $this->container['customerponumber'] = $customerponumber;

        return $this;
    }

    /**
     * Gets ordertype
     *
     * @return string
     */
    public function getOrdertype()
    {
        return $this->container['ordertype'];
    }

    /**
     * Sets ordertype
     *
     * @param string $ordertype Order Type tells our system if this is standard order or a direct ship order • Currently Ingram Micro’s system has 2 types of sales orders.   o Standard orders:  Orders that contain skus that ship from Ingram Micro’s warehouse locations. o Direct ship orders:  Orders for skus, such as licenses, warranties and custom-built hardware skus that ship directly from our vendors.  We identify SKUs that must be processed separately with a class code of “X”.  The class code is found in the daily FTP price file, If Class Code is not included in your FTP Price file, you can request that it be added by contacting 1-800-616-4665.
     *
     * @return $this
     */
    public function setOrdertype($ordertype)
    {
        $allowedValues = $this->getOrdertypeAllowableValues();
        if (!in_array($ordertype, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'ordertype', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['ordertype'] = $ordertype;

        return $this;
    }

    /**
     * Gets enduserordernumber
     *
     * @return string
     */
    public function getEnduserordernumber()
    {
        return $this->container['enduserordernumber'];
    }

    /**
     * Sets enduserordernumber
     *
     * @param string $enduserordernumber Customers End-user PO number
     *
     * @return $this
     */
    public function setEnduserordernumber($enduserordernumber)
    {
        $this->container['enduserordernumber'] = $enduserordernumber;

        return $this;
    }

    /**
     * Gets billtosuffix
     *
     * @return string
     */
    public function getBilltosuffix()
    {
        return $this->container['billtosuffix'];
    }

    /**
     * Sets billtosuffix
     *
     * @param string $billtosuffix Designates flooring acct to be used
     *
     * @return $this
     */
    public function setBilltosuffix($billtosuffix)
    {
        $this->container['billtosuffix'] = $billtosuffix;

        return $this;
    }

    /**
     * Gets shiptosuffix
     *
     * @return string
     */
    public function getShiptosuffix()
    {
        return $this->container['shiptosuffix'];
    }

    /**
     * Sets shiptosuffix
     *
     * @param string $shiptosuffix Applies to customers with multiple ship to locations (store locations)
     *
     * @return $this
     */
    public function setShiptosuffix($shiptosuffix)
    {
        $this->container['shiptosuffix'] = $shiptosuffix;

        return $this;
    }

    /**
     * Gets shiptoaddress
     *
     * @return \Swagger\Client\Model\OrderCreateV40Vse0OrdercreaterequestOrdercreatedetailsShiptoaddress
     */
    public function getShiptoaddress()
    {
        return $this->container['shiptoaddress'];
    }

    /**
     * Sets shiptoaddress
     *
     * @param \Swagger\Client\Model\OrderCreateV40Vse0OrdercreaterequestOrdercreatedetailsShiptoaddress $shiptoaddress shiptoaddress
     *
     * @return $this
     */
    public function setShiptoaddress($shiptoaddress)
    {
        $this->container['shiptoaddress'] = $shiptoaddress;

        return $this;
    }

    /**
     * Gets carriercode
     *
     * @return string
     */
    public function getCarriercode()
    {
        return $this->container['carriercode'];
    }

    /**
     * Sets carriercode
     *
     * @param string $carriercode A customer can dictate what carrier to use for their shipment (Ingram 2-digit carrier code is required). Our recommendation is leave this field blank which will allow Ingram Micro to choose the best carrier to gain the best freight rates.
     *
     * @return $this
     */
    public function setCarriercode($carriercode)
    {
        $this->container['carriercode'] = $carriercode;

        return $this;
    }

    /**
     * Gets thirdpartyfrieghtaccountnumber
     *
     * @return string
     */
    public function getThirdpartyfrieghtaccountnumber()
    {
        return $this->container['thirdpartyfrieghtaccountnumber'];
    }

    /**
     * Sets thirdpartyfrieghtaccountnumber
     *
     * @param string $thirdpartyfrieghtaccountnumber Refers to a third-party freight account number for charging freight against. The account number should be passed within this field and the appropriate carrier code should be supplied within the carrier code tags. Prior to sending your request containing the third-party account number, it must be first entered into our system. Your Ingram Micro Sales Representative can action this for you. If submitted within an order without this preapproval the third-party account number will be ignored.  Note: USA partners- For FedEx Air only (carrier codes F1, FO, F2, FG.), please send three leading zeros before your third-party freight account number (i.e.: 000999999999.)
     *
     * @return $this
     */
    public function setThirdpartyfrieghtaccountnumber($thirdpartyfrieghtaccountnumber)
    {
        $this->container['thirdpartyfrieghtaccountnumber'] = $thirdpartyfrieghtaccountnumber;

        return $this;
    }

    /**
     * Gets specialbidnumber
     *
     * @return string
     */
    public function getSpecialbidnumber()
    {
        return $this->container['specialbidnumber'];
    }

    /**
     * Sets specialbidnumber
     *
     * @param string $specialbidnumber This is the special quote number given to a customer either by a vendor for special pricing or by Ingram Micro. To receive the special pricing assigned to this number it must be included on the order.
     *
     * @return $this
     */
    public function setSpecialbidnumber($specialbidnumber)
    {
        $this->container['specialbidnumber'] = $specialbidnumber;

        return $this;
    }

    /**
     * Gets lines
     *
     * @return \Swagger\Client\Model\OrderCreateV40Vse0OrdercreaterequestOrdercreatedetailsLines[]
     */
    public function getLines()
    {
        return $this->container['lines'];
    }

    /**
     * Sets lines
     *
     * @param \Swagger\Client\Model\OrderCreateV40Vse0OrdercreaterequestOrdercreatedetailsLines[] $lines lines
     *
     * @return $this
     */
    public function setLines($lines)
    {
        $this->container['lines'] = $lines;

        return $this;
    }

    /**
     * Gets extendedspecs
     *
     * @return \Swagger\Client\Model\OrderCreateV40Vse0OrdercreaterequestOrdercreatedetailsExtendedspecs
     */
    public function getExtendedspecs()
    {
        return $this->container['extendedspecs'];
    }

    /**
     * Sets extendedspecs
     *
     * @param \Swagger\Client\Model\OrderCreateV40Vse0OrdercreaterequestOrdercreatedetailsExtendedspecs $extendedspecs extendedspecs
     *
     * @return $this
     */
    public function setExtendedspecs($extendedspecs)
    {
        $this->container['extendedspecs'] = $extendedspecs;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
